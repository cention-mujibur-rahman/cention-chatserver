#! /usr/bin/env ferite

uses 'httpserver', 'consoleserver';
uses 'lib/FastChatMCAM';
uses 'lib/ExternalChat';
uses 'date';
uses 'lib/DebugConsole';

global {
	number objSrvLastConnectionTime;
	number TIMEOUT;
}

class DummyApplication {
	string realName;
	boolean topLevel;
}

function checkRpcConnection () {
	number now = Date.now();
	
	/* Make sure we have connection to objectserver before continuing */
	if (now - objSrvLastConnectionTime > TIMEOUT) {
		JSON.RPC.reconnect('localhost',8080);
	}
	objSrvLastConnectionTime = now;
}

objSrvLastConnectionTime = 0;
TIMEOUT = 4.5 * 60;

application = new DummyApplication();
application.realName = 'cention-suite';

{
	object chatserver = new HttpServer(9090);
	chatserver.sync_post = true;
	chatserver.onRequest() using (req) {
		array commands = [ 'MCAM' , req.pathInfo() ];
		
		checkRpcConnection();
	
		req.respond(InternalChat.handleChatRequest(req,commands,req.query));
	};
}

{
	object externalchat = new HttpServer(9191);
	externalchat.sync_post = true;
	externalchat.onRequest() using (req) {
	array commands = [ 'MCAM' , req.pathInfo() ];
		number now = Date.now();
		
		checkRpcConnection();
	
		req.respond(ExternalChat.handleChatRequest(req,commands,req.query));	
	};
}

EventLoop.listen();
