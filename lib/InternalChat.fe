uses 'reflection';
uses 'InternalChatProtocol';

namespace InternalChat {
	function handleChatRequest ( object req, array commands, array parameters ) {
	
		// Quick workaround to handle multiple requests.
		// TODO: replace global request variable with request parameter.
		request = req;

		if( commands ) {
			switch( commands[0] ) {
				case 'MCAM': {
					array channels = [];
					string methodName = commands[1].dissect('.',0).pop();
					object method = new Function(ChatMCAM, methodName);
					
					allowedToStoreSession = false;
					GUIKit.isBackgroundEvent = true;
					ChatMCAM.init();

					req.contentType('text/json; charset=UTF-8');
					
					if (method) {
						channels[] = HTML.MCAMChannel('Result', commands[1], method.exec(parameters));
					}
					
					return HTML.MCAMEnvelope(channels.join(','));
				}
				default:
					return "";
			}
		}
	}
}
